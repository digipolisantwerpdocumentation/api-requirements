openapi: 3.0.1
info:
  title: problem types
  version: 1.0.0
servers:
- url: /
paths: {}
components:
  schemas:
    Problem:
      type: object
      properties:
        type:
          type: string
          description: A URI identifying this problem. The URI should resolve into
            human-readable documentation for this problem.
          format: uri
          example: http://api-gateway/digipolis/payment/v1/payments/FE0032
        title:
          type: string
          description: A short, summary of the problem type. Written in english and
            readable for engineers (usually not suited for non technical stakeholders
            and not localized)
          example: You do not have enough credit.
        status:
          maximum: 6E+2
          exclusiveMaximum: true
          minimum: 4E+2
          type: integer
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          format: int32
          example: 400
        identifier:
          type: string
          description: a unique identifier of the given problem, usefull to recover
            this problem message into a logging system.
          example: C5C68BE6-B5FF-11E5-B08F-D1D119563991
        code:
          type: string
          description: the code of the given problem
          example: FE0032
      description: A generic model used to describe problems as a result of incorrect
        or failed HTTP requests .
    ExtraInfoProblem:
      description: Problem with extra information
      allOf:
      - $ref: '#/components/schemas/Problem'
      - type: object
        properties:
          extraInfo:
            type: string
            description: extra information regarding the problem
    InvalidParamProblem:
      description: Problem details for invalid input parameter(s)
      allOf:
      - $ref: '#/components/schemas/Problem'
      - type: object
        properties:
          invalidParams:
            type: array
            description: An array of parameter OpenAPI violations
            items:
              $ref: '#/components/schemas/InvalidParam'
    InvalidParam:
      type: object
      properties:
        in:
          type: string
          description: The location of the invalid parameter (cfr Swagger parameters)
          enum:
          - body
          - path
          - query
          - header
        name:
          type: string
          description: The name of the invalid parameter
        reason:
          type: string
          description: A message explaining the violation
        value:
          type: object
          description: The value of the erroneous parameter
  responses:
    BadRequest:
        description: Bad request
        content:
            application/problem+json:
                schema:
                    $ref: '#/components/schemas/Problem'
    Unexpected:
        description: Unexpected error
        content:
            application/problem+json:
                schema:
                    $ref: '#/components/schemas/Problem'
    InternalServer:
        description: Internal Server Error
        content:
            application/problem+json:
                schema:
                    $ref: '#/components/schemas/Problem'
    NotFound:
        description: Not found
        content:
            application/problem+json:
                schema:
                    $ref: '#/components/schemas/Problem'
